{"version":3,"sources":["./ClientApp/app/shop/productList.component.ts","./ClientApp/app/shop/productList.component.html","./ClientApp/app/checkout/checkout.component.ts","./ClientApp/app/checkout/checkout.component.html","./ClientApp/environments/environment.ts","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/shared/order.ts","./ClientApp/main.ts","./ClientApp/app/shop/shop.component.ts","./ClientApp/app/shop/shop.component.html","./ClientApp/app/login/login.component.ts","./ClientApp/app/login/login.component.html","./ClientApp/app/shared/dataService.ts","./ClientApp/app/shop/cart.component.ts","./ClientApp/app/shop/cart.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: 'productList.component.html',\r\n    styleUrls: [ \"productList.component.css\" ]\r\n})\r\nexport class ProductList implements OnInit {\r\n    constructor(private data: DataService) {\r\n        //this.products = data.products;\r\n    }\r\n    public products : Product[] = [];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.data.products;\r\n                }\r\n            });\r\n    }\r\n    addProduct(product: Product) {\r\n        this.data.addToOrder(product);\r\n        \r\n    }\r\n}","<div class=\"row\">\r\n\r\n    <div class=\"product-info col-md-4 \" *ngFor=\"let p of products\">\r\n        <div class=\"card bg-light p-1 m-1\">\r\n\r\n            <img src=\"/img/{{p.artId}}.jpg\" class=\"img-responsive\" [alt]=\"p.title\" />\r\n            <div class=\"product-name\">{{p.category}} - {{p.size}}</div>\r\n            <div><strong>Price:</strong> {{ p.price | currency:\"USD\":true }}</div>\r\n            <div><strong>Artist:</strong> {{p.artist}}</div>\r\n            <div><strong>Title:</strong> {{p.title}}</div>\r\n            <div><strong>Description:</strong> {{p.artDescription}}</div>\r\n\r\n\r\n            <button id=\"buyButton\" class=\"btn btn-success btn-sm pull-right\" (click)=\"addProduct(p)\">Buy</button>\r\n        </div>\r\n        </div>\r\n\r\n\r\n    </div>","import { Component } from \"@angular/core\";\nimport { DataService } from '../shared/dataService';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"checkout\",\n  templateUrl: \"checkout.component.html\",\n  styleUrls: ['checkout.component.css']\n})\nexport class Checkout {\n\n  constructor(public data: DataService, public router:Router) {\n    }\n    errorMessage: string = \"\";\n  onCheckout() {\n    // TODO\n    //alert(\"Doing checkout\");\n      this.data.checkout()\n          .subscribe(success => {\n              if (success) {\n                  this.router.navigate([\"/\"]);\n              }\r\n          }, err => this.errorMessage = \"Failed to save order\");\n  }\n}","    <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{errorMessage}}</div>\n    <div class=\"row\">\n\n        <h3>Confirm Order</h3>\n        <table class=\"table table-bordered table-hover\">\n            <tr *ngFor=\"let o of data.order.items\">\n                <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\n                <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\n                <td>{{ o.quantity }}</td>\n                <td>{{ o.unitPrice|currency:'USD':true }}</td>\n                <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\n            </tr>\n        </table>\n        <div class=\"col-md-4 offset-md-8 text-right\">\n            <table class=\"table table-condensed\">\n                <tr>\n                    <td class=\"text-right\">Subtotal</td>\n                    <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':true }}</td>\n                </tr>\n                <tr>\n                    <td class=\"text-right\">Shipping</td>\n                    <td class=\"text-right\">$ 0.00</td>\n                </tr>\n                <tr>\n                    <td class=\"text-right\">Total:</td>\n                    <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':true }}</td>\n                </tr>\n            </table>\n            <button class=\"btn btn-success\" (click)=\"onCheckout()\">Complete Purchase</button>\n            <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\n        </div>\n\n    </div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n   \r\n  selector: 'the-shop',\r\n    templateUrl: './app.component.html',\r\n  styles: []\r\n})\r\nexport class AppComponent {\r\n title = 'Product List';\r\n}\r\n","<router-outlet>\r\n\r\n</router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n//import { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ProductList } from \"./shop/productList.component\";\r\nimport { DataService } from \"./shared/dataService\";\r\n\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { Cart } from \"./shop/cart.component\";\r\n\r\nimport { Shop } from \"./shop/shop.component\";\r\nimport { Checkout } from \"./checkout/checkout.component\";\r\nimport { Login } from \"./login/login.component\";\r\n\r\nimport { APP_BASE_HREF } from '@angular/common';\r\n\r\nlet routes = [\r\n    { path:\"\", component: Shop },\r\n    { path: \"checkout\", component: Checkout },\r\n    {path :\"login\",component: Login}\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n        AppComponent,\r\n        ProductList,\r\n        Cart,\r\n        Shop,\r\n        Checkout,\r\n        Login\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n     // AppRoutingModule,\r\n      HttpClientModule,\r\n        RouterModule.forRoot(routes, {\r\n            useHash: true,\r\n            enableTracing: false // for Debugging of the Routes\r\n        }),\r\n      FormsModule\r\n    \r\n  ],\r\n    //providers: [{ provide: APP_BASE_HREF, useValue: '/App/Shop' },DataService] ,\r\n    providers: [DataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items , i => i.unitPrice * i.quantity));\r\n    }\r\n}\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Component } from \"@angular/core\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: \"the-shop\",\r\n    templateUrl:\"shop.component.html\"\r\n\r\n})\r\n\r\nexport class Shop {\r\n    title = 'Product List';\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n        <h3>{{ title }}</h3>\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <div class=\"card bg-light p-2\">\r\n            <!--<div class=\"well well-sm\">-->\r\n            <the-cart></the-cart>\r\n        <!--</div>-->\r\n    </div>\r\n</div>","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Router } from \"@angular/router\"\r\n\r\n@Component({\r\n    selector: \"login\",\r\n    templateUrl: \"login.component.html\"\r\n})\r\n\r\nexport class Login {\r\n\r\n    constructor(private data: DataService, private router: Router) { }\r\n\r\n    errMessage: string = \"\";\r\n\r\n    public creds = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    onLogin() {\r\n        //call login service\r\n      //  debugger;\r\n        //alert(this.creds.username);\r\n        //this.creds.username += \"!\";\r\n        this.data.login(this.creds)\r\n            .subscribe(success => {\r\n                if (this.data.order.items.length == 0) {\r\n                    this.router.navigate([\"/\"]);\r\n                } else {\r\n                    this.router.navigate([\"checkout\"]);\r\n                }\r\n            }, error => this.errMessage = \"Failed to login\");\r\n    }\r\n}\r\n\r\n","<div class=\"row\">\n    <div class=\"col-md-4 offset-md-4\">\n\n        <div *ngIf=\"errMessage\" class=\"alert alert-warning\">{{errMessage}}</div>\n\n        <form (submit)=\"onLogin()\" #theForm=\"ngForm\" novalidate>\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"creds.username\" #username=\"ngModel\" required />\n                <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid &&username.errors.required\">Username is required</div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"creds.password\" #password=\"ngModel\" required />\n                <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid &&password.errors.required\">Password is required</div>\n\n            </div>\n            <div class=\"form-group\">\n                <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"theForm.invalid\" />\n                <a routerLink=\"/\" class=\"btn btn-default\">Cancel</a>\n            </div>\n        </form>\n    </div>\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product } from \"./product\";\r\nimport { Order, OrderItem} from \"./order\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date;\r\n\r\n    public order: Order = new Order();\r\n    public products: Product[] = [];\r\n\r\n    loadProducts(): Observable<boolean> {\r\n        return this.http\r\n            .get(\"/api/products\")\r\n            .pipe(\r\n                    map((data: any[]) => {\r\n                    this.products = data;\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n    }\r\n    login(creds): Observable<boolean> {\r\n        return this.http\r\n            .post(\"/account/createtoken\", creds)\r\n            .pipe(\r\n                map((data: any) => {\r\n                this.token = data.token;\r\n                this.tokenExpiration = data.expiration;\r\n                return true;\r\n            }));\r\n    }\r\n\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n        }\r\n\r\n        return this.http.post(\"/api/orders\", this.order,\r\n            { headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token) })\r\n            .pipe(map(response => {\r\n                this.order = new Order();\r\n                return true;\r\n            }));\r\n    }\r\n    public addToOrder(newProduct: Product) {\r\n       /* if (this.order) {\r\n            this.order = new Order();\r\n        }*/\r\n        var item: OrderItem = this.order.items.find(i => i.productId == newProduct.id);\r\n        if (item) {\r\n\r\n            item.quantity++;\r\n        }\r\n        else {\r\n             item= new OrderItem();\r\n            item.productId = newProduct.id;\r\n            item.productArtist = newProduct.artist;\r\n            item.productArtId = newProduct.artId;\r\n            item.productCategory = newProduct.category;\r\n            item.productSize = newProduct.size;\r\n            item.productTitle = newProduct.title;\r\n            item.unitPrice = newProduct.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n\r\n})\r\n\r\nexport class Cart {\r\n\r\n    constructor(public data: DataService,private router :Router) {\r\n    }\r\n\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            //Force login\r\n            this.router.navigate([\"login\"]);\r\n        } else {\r\n            //go to checkout\r\n            this.router.navigate([\"checkout\"]);\r\n\r\n        }\r\n    }\r\n}","<h3>Shopping Cart</h3>\r\n<div>#/Items: {{data.order.items.length}}</div>\r\n<div>Subtotal: {{data.order.subtotal |currency:\"USD\": true}}</div>\r\n<!--<table class=\"table table-condensed table-hover\">-->\r\n    <table class=\"table table-sm table-hover\">\r\n\r\n        <thead>\r\n            <tr>\r\n                <td>Product</td>\r\n                <td>#</td>\r\n                <td>$</td>\r\n                <td>Total</td>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let o of data.order.items\">\r\n                <td>{{o.productCategory}}-{{o.productTitle}}</td>\r\n                <td>{{o.quantity}}</td>\r\n                <td>{{o.unitPrice | currency:\"USD\": true}}</td>\r\n                <td>{{(o.unitPrice * o.quantity) |currency :\"USD\" : true}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <!---<a routerLink=\"checkout\" class=\"btn btn-success\" *ngIf=\"data.order.items.length > 0\">Checkout</a>-->\r\n\r\n    <button routerLink=\"checkout\" class=\"btn btn-success\" *ngIf=\"data.order.items.length>0\" (click)=\"onCheckout()\">Checkout</button>\r\n\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}